<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{e77809f8-4a7e-4cf6-a44f-a3dc75ea96cb}</ProjectGuid>
    <RootNamespace>openvrambientlight</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>build\intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>build\intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>$(SolutionDir)\external\openvr\headers;$(SolutionDir)\external\imgui;$(SolutionDir)\external\implot;$(SolutionDir)\external\spdlog\include;$(SolutionDir)\external\simpleini;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\external\openvr\lib\win64;$(SolutionDir)\external\spdlog\build\RelWithDebInfo;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;d3d11.lib;dxgi.lib;openvr_api.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;pathcch.lib;Dwmapi.lib;UxTheme.lib;spdlog.lib;dxguid.lib;OneCore.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy $(SolutionDir)\external\openvr\bin\win64\openvr_api.dll $(OutDir)
copy $(SolutionDir)\openvr_ambient_light.vrmanifest $(OutDir)
copy $(SolutionDir)\readme.md $(OutDir)</Command>
    </PostBuildEvent>
    <FxCompile>
      <ShaderModel>5.0</ShaderModel>
      <ObjectFileOutput />
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>$(SolutionDir)\external\openvr\headers;$(SolutionDir)\external\imgui;$(SolutionDir)\external\implot;$(SolutionDir)\external\spdlog\include;$(SolutionDir)\external\simpleini;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\external\openvr\lib\win64;$(SolutionDir)\external\spdlog\build\RelWithDebInfo;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;d3d11.lib;dxgi.lib;openvr_api.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;pathcch.lib;Dwmapi.lib;UxTheme.lib;spdlog.lib;dxguid.lib;OneCore.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy $(SolutionDir)\external\openvr\bin\win64\openvr_api.dll $(OutDir)
copy $(SolutionDir)\openvr_ambient_light.vrmanifest $(OutDir)
copy $(SolutionDir)\readme.md $(OutDir)</Command>
    </PostBuildEvent>
    <FxCompile>
      <ShaderModel>5.0</ShaderModel>
      <ObjectFileOutput />
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="adalight_led_interface.h" />
    <ClInclude Include="ambient_light_sampler.h" />
    <ClInclude Include="async_data.h" />
    <ClInclude Include="d3d11_renderer.h" />
    <ClInclude Include="external\imgui\backends\imgui_impl_dx11.h" />
    <ClInclude Include="external\imgui\backends\imgui_impl_win32.h" />
    <ClInclude Include="external\imgui\imconfig.h" />
    <ClInclude Include="external\imgui\imgui.h" />
    <ClInclude Include="external\imgui\imgui_internal.h" />
    <ClInclude Include="external\imgui\imstb_rectpack.h" />
    <ClInclude Include="external\imgui\imstb_textedit.h" />
    <ClInclude Include="external\imgui\imstb_truetype.h" />
    <ClInclude Include="external\imgui\misc\cpp\imgui_stdlib.h" />
    <ClInclude Include="external\implot\implot.h" />
    <ClInclude Include="external\implot\implot_internal.h" />
    <ClInclude Include="framework.h" />
    <ClInclude Include="led_interface.h" />
    <ClInclude Include="main.h" />
    <ClInclude Include="mathutil.h" />
    <ClInclude Include="profiling.h" />
    <ClInclude Include="Resource.h" />
    <ClInclude Include="settings_manager.h" />
    <ClInclude Include="settings_menu.h" />
    <ClInclude Include="structures.h" />
    <ClInclude Include="targetver.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="adalight_led_interface.cpp" />
    <ClCompile Include="ambient_light_sampler.cpp" />
    <ClCompile Include="d3d11_renderer.cpp" />
    <ClCompile Include="external\imgui\backends\imgui_impl_dx11.cpp" />
    <ClCompile Include="external\imgui\backends\imgui_impl_win32.cpp" />
    <ClCompile Include="external\imgui\imgui.cpp" />
    <ClCompile Include="external\imgui\imgui_demo.cpp" />
    <ClCompile Include="external\imgui\imgui_draw.cpp" />
    <ClCompile Include="external\imgui\imgui_tables.cpp" />
    <ClCompile Include="external\imgui\imgui_widgets.cpp" />
    <ClCompile Include="external\imgui\misc\cpp\imgui_stdlib.cpp" />
    <ClCompile Include="external\implot\implot.cpp" />
    <ClCompile Include="external\implot\implot_items.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="settings_manager.cpp" />
    <ClCompile Include="settings_menu.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="openvr_ambient_light.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="icon_off.ico" />
    <Image Include="icon_on.ico" />
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="shaders\combine_light_cs.hlsl">
      <HeaderFileOutput Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">shaders/combine_light_cs.h</HeaderFileOutput>
      <HeaderFileOutput Condition="'$(Configuration)|$(Platform)'=='Release|x64'">shaders/combine_light_cs.h</HeaderFileOutput>
      <VariableName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">g_combineLightCS</VariableName>
      <VariableName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">g_combineLightCS</VariableName>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compute</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compute</ShaderType>
    </FxCompile>
    <FxCompile Include="shaders\gather_light_cs.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compute</ShaderType>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">5.0</ShaderModel>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compute</ShaderType>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">5.0</ShaderModel>
      <VariableName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">g_gatherLightCS</VariableName>
      <HeaderFileOutput Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">shaders/gather_light_cs.h</HeaderFileOutput>
      <VariableName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">g_gatherLightCS</VariableName>
      <HeaderFileOutput Condition="'$(Configuration)|$(Platform)'=='Release|x64'">shaders/gather_light_cs.h</HeaderFileOutput>
    </FxCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="external\imgui\misc\debuggers\imgui.natstepfilter" />
  </ItemGroup>
  <ItemGroup>
    <Natvis Include="external\imgui\misc\debuggers\imgui.natvis" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>